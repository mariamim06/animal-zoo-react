{"version":3,"sources":["Components/Header/Header.js","Components/Animal/Animal.js","Components/Visit/Visit.js","Components/Zoo/Zoo.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Animal","props","animal","name","species","img","age","origin","cost","element","icon","faPaw","src","onClick","handleAddToVisit","Visit","visit","total","length","Zoo","useState","animals","setAnimals","setVisit","useEffect","fetch","then","res","json","data","console","log","newVisit","map","key","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAeeA,EAZA,WACX,OACI,8BACI,yBAAQC,UAAU,aAAlB,UACI,6CAAe,sBAAMA,UAAU,mBAAhB,6BACf,0MACA,0D,uCCmBDC,G,MAvBA,SAACC,GACZ,MAAgDA,EAAMC,OAA/CC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,QAASC,EAAtB,EAAsBA,IAAKC,EAA3B,EAA2BA,IAAKC,EAAhC,EAAgCA,OAAQC,EAAxC,EAAwCA,KAClCC,EAAU,cAAC,IAAD,CAAiBC,KAAMC,MACvC,OAEI,qBAAKZ,UAAU,UAAf,SACI,gCACA,qBAAKA,UAAU,QAAQa,IAAKP,IAC5B,qBAAIN,UAAU,eAAd,mBAAoCI,KACpC,2CAAcC,KACd,uCAAUE,KACV,0CAAaC,KACb,6CAAgBC,KAChB,yBACDK,QAAS,kBAAMZ,EAAMa,iBAAiBb,EAAMC,SAC3CH,UAAU,MAFV,cAGGU,EAHH,+B,QCAGM,G,MAfD,SAACd,GACX,IADqB,EACbe,EAAUf,EAAVe,MACJC,EAAQ,EAFS,cAGAD,GAHA,IAGrB,2BAA2B,CACvBC,GADuB,QACAT,MAJN,8BAMrB,OACI,sBAAKT,UAAU,QAAf,UACA,oBAAIA,UAAU,cAAd,+BACA,oDAAuBE,EAAMe,MAAME,UACnC,8CAAiBD,EAAjB,YCgCOE,EAxCH,WACR,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOJ,EAAP,KAAcO,EAAd,KAEAC,qBAAW,WACPC,MAAM,kBACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIP,EAAWO,QAC1B,IAEH,IAAMf,EAAmB,SAACZ,GAClB4B,QAAQC,IAAI7B,EAAOC,MACnB,IAAM6B,EAAQ,sBAAOhB,GAAP,CAAcd,IAC5BqB,EAASS,IAGjB,OACI,sBAAKjC,UAAU,gBAAf,UACI,sBAAKA,UAAU,mBAAf,UAEI,qBAAKA,UAAU,OAAf,SAEQsB,EAAQY,KAAI,SAAA/B,GAAM,OAAI,cAAC,EAAD,CAEtBA,OAAQA,EACRY,iBAAkBA,GAFbZ,EAAOgC,UALxB,OAeA,qBAAKnC,UAAU,kBAAf,SACG,cAAC,EAAD,CAAOiB,MAAOA,UC1BdmB,MATf,WACE,OACE,sBAAKpC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCISqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ea9a233b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n            <header className=\"App-header\">\r\n                <h1>Welcome To <span className=\"highlighted-word\">WILDLIFE ZOO</span></h1>\r\n                <p>Here you bcan experience real Amazon forest vibe.. So don't be late.. It's hightime took a break and enjoyed some time with amazing animals... You are always welcomed...</p>\r\n                <h2>Total animals: 167</h2>\r\n            </header>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Header;\r\n\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCoffee, faPaw } from '@fortawesome/free-solid-svg-icons';\r\nimport './Animal.css';\r\n\r\nconst Animal = (props) => {\r\n    const {name, species, img, age, origin, cost} = props.animal;\r\n    const element = <FontAwesomeIcon icon={faPaw} />\r\n    return(\r\n        \r\n        <div className=\"animals\">\r\n            <div>\r\n            <img className=\"image\" src={img}></img>\r\n            <h3 className=\"text-primary\">Name: {name}</h3>\r\n            <h3>Species: {species}</h3>\r\n            <h3>Age: {age}</h3>\r\n            <h3>Origin: {origin}</h3>\r\n            <h3>Visit cost:{cost}</h3>\r\n            <button \r\n           onClick={() => props.handleAddToVisit(props.animal)}\r\n            className=\"btn\"\r\n            > {element} Add to visit list</button>\r\n            </div>            \r\n        </div>\r\n       \r\n    );\r\n};\r\n\r\nexport default Animal;","import React from 'react';\r\nimport './Visit.css';\r\n\r\nconst Visit = (props) => {\r\n    const { visit } = props;\r\n    let total = 0;\r\n    for (const animal of visit){\r\n        total = total + animal.cost;\r\n    }\r\n    return (\r\n        <div className=\"visit\">\r\n        <h2 className=\"visit-title\">Counter for Visit</h2>\r\n        <h3>Animals selected: {props.visit.length}</h3>\r\n        <h3>Total cost: {total} </h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Visit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './Zoo.css';\r\nimport Animal from '../Animal/Animal';\r\nimport Visit from '../Visit/Visit';\r\n\r\nconst Zoo = () => {\r\n    const [animals, setAnimals] = useState([]);\r\n    const [visit, setVisit] = useState([]);\r\n\r\n    useEffect( () => {\r\n        fetch('./animals.JSON')\r\n        .then(res => res.json())\r\n        .then(data => setAnimals(data));\r\n    }, [])\r\n\r\n    const handleAddToVisit = (animal) => {\r\n            console.log(animal.name);\r\n            const newVisit = [...visit, animal];\r\n            setVisit(newVisit);\r\n    }\r\n\r\n    return (\r\n        <div className=\"zoo-container\">\r\n            <div className=\"animal-container\">\r\n                {/* <h3>Animals: {animals.length} </h3> */}\r\n                <div className=\"grid\">\r\n                {\r\n                        animals.map(animal => <Animal\r\n                        key={animal.key}\r\n                        animal={animal}\r\n                        handleAddToVisit={handleAddToVisit}\r\n                        ></Animal>)\r\n                   \r\n                }\r\n                </div>\r\n                )\r\n            </div>\r\n\r\n            <div className=\"visit-container\">\r\n               <Visit visit={visit}></Visit>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Zoo;","import './App.css';\nimport Header from './Components/Header/Header';\nimport Zoo from './Components/Zoo/Zoo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <Zoo></Zoo>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}